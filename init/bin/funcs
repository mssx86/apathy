#!/mss/bin/sh
umask 022
export PATH="/mss/init/bin:/usr/sbin:/usr/bin:/sbin:/bin:/mss/bin"

c_reset="\\033[0;39m"
c_green="\\033[1;32m"
  c_red="\\033[1;31m"
c_lcyan="\\033[1;36m"
 c_blue="\\033[1;34m"

 sbefore="    "
 pbefore="  "
cur_zero="\\033[0G"
  s_fail="${c_red}f${c_reset}"
  s_warn="${c_blue}w${c_reset}"
  s_succ="${c_green}s${c_reset}"
   s_arm="${c_lcyan}â””${c_reset}"

ainit_nc(){   printf "\n";}
ainitmes(){   printf "${sbefore}${@}";}
ainitusage(){ printf "${sbefore}usage: ${@}.\n";}
failprompt(){ printf "${cur_zero}${pbefore}${s_fail}\n";}
warnprompt(){ printf "${cur_zero}${pbefore}${s_warn}\n";}
succprompt(){ printf "${cur_zero}${pbefore}${s_succ}\n";}
armprompt(){  printf "${cur_zero}${pbefore}${s_arm}\n";}


evalret(){
 local exitval="${?}"

 if [ ${exitval} -eq 0 ]
  then succprompt
  else
   failprompt
   ainitmes "${c_red}service exited with ${c_green}${exitval}${c_reset}."
   armprompt
   sleep 0.5
 fi
}

ainit_mount(){
 mountpoint $4 >/dev/null 2>&1 \
  && mount -o "remount,$1" -t "$2" "$3" "$4" \
  || mount -o         "$1" -t "$2" "$3" "$4"
}

banner(){
   datefmt="$(date '+%a %d %I:%M:%S%P' | awk '{print tolower($0)}')"
    kerver="$(uname -r)"
    kerdat="$(uname -v | awk '{print tolower($4)$5,$6}')"
   datefmt="${c_green}${datefmt}${c_reset}"
 kerdatfmt="${c_blue}(${c_reset}${c_red}${kerdat}${c_blue})${c_reset}"
 kerverfmt="${c_green}k${c_blue}:${c_reset} ${kerver}"
 clear

 ainit_nc; ainit_nc
 ainitmes "${c_blue}apathy ${c_red}musl ${c_lcyan}1.2 - ${datefmt}"; ainit_nc
 ainitmes "${kerverfmt} ${kerdatfmt}";                               ainit_nc
 ainit_nc; ainit_nc
}

ainit_kill(){
 servpid="$$"
 pidlist="$(pgrep -x ${1} || pgrep -f ${1})"
 kpid="$(echo "${pidlist}" | sed "s/${servpid}//")"

 if [ -z "${kpid}" ]
  then
   failprompt
   ainitmes "${c_red}no proccess found to kill${c_reset}."
   armprompt
  else kill -15 ${kpid} || kill -9 ${kpid} || kill -HUP ${kpid}; evalret
 fi
}

if [ "$(id -u)" -ne 0 ]; then
 ainitmes "this script must be run as uid 0, exiting."; failprompt
 exit 1
fi
