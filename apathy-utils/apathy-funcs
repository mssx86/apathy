#!/mss/bin/sh
umask 022
export PATH=/usr/sbin:/usr/bin:/sbin:/bin:/mss/bin
export LANG=C

# 1 >> define colors
 c_res="\033[0;39m"

cl_blk="\033[0;30m" cb_blk="\033[1;30m"
cl_red="\033[0;31m" cb_red="\033[1;31m"
cl_grn="\033[0;32m" cb_grn="\033[1;32m"
cl_yel="\033[0;33m" cb_yel="\033[1;33m"
cl_blu="\033[0;34m" cb_blu="\033[1;34m"
cl_mgn="\033[0;35m" cb_mgn="\033[1;35m"
cl_cyn="\033[0;36m" cb_cyn="\033[1;36m"
cl_whi="\033[0;37m" cb_whi="\033[1;37m"

# 2 >> define prompts
    sbefore="   "
    pbefore=" "
   cur_zero="\\033[0G"

    s_fail="${cb_red}f${c_res}"
    s_warn="${cb_blu}w${c_res}"
    s_succ="${cb_grn}s${c_res}"

memearrow="${pbefore}${cb_whi}>${c_res} "
     askq="${pbefore}${cb_blu}?${c_res} "

# 3 >> printing functions
aprint(){       printf "${memearrow}${@}\n"; }
aprint_nc(){    printf "\n";                 }
aprint_nm(){    printf "${sbefore}${@}\n";   }
aprint_ret(){   printf "${sbefore}${@}";     }
aprint_ask(){   printf "${askq}${@}";        }

failprompt(){   printf "${cur_zero}${pbefore}${s_fail}\n"; }
warnprompt(){   printf "${cur_zero}${pbefore}${s_warn}\n"; }
succprompt(){   printf "${cur_zero}${pbefore}${s_succ}\n"; }

aprint_fail(){  printf "${sbefore}${@}"; failprompt; }
aprint_warn(){  printf "${sbefore}${@}"; warnprompt; }
aprint_succ(){  printf "${sbefore}${@}"; succprompt; }

aprint_patch(){ aprint_ret "${cl_grn}${@}${c_res}";              }
aprint_usage(){ aprint "${cb_red}usage${cb_blu}:${c_res} ${@}";  }
lsdetail(){     aprint "${cb_red}${1}\t${cb_blu}:${c_res} ${2}"; }

# 4 >> checks and evaluation functions
evalret(){
 local error_value="${?}"
 if [ ${error_value} -eq 0 ]; then succprompt; else failprompt; fi
}

evalretkill(){
 local error_value="${?}"
 if [ ${error_value} -eq 0 ]; then succprompt; else failprompt; exit 1; fi
}

rootcheck(){
 if [ "$(id -u)" -ne 0 ]
  then
   aprint_nc
   aprint_fail "this script must be run as uid 0, exiting."
   aprint_nc
   exit 1
 fi
}
