#!/mss/bin/sh
. /mss/bin/apathy-funcs

rootcheck

aprint_ask "this script will strip bins and libs which could be harmful."
aprint_nc
aprint_ask "are you sure you want to procceed? (y/n): "

read answer


if [ "$answer" != "${answer#[Yy]}" ]
 then
  aprint_nc

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}.a \t${c_green}/usr/lib\t\t${c_lcyan}(--strip-debug)"${c_reset}
  find /usr/lib		-type f -name \*.a -exec strip --strip-debug {} ';' > /dev/null 2>&1
  evalretkill

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}.so \t${c_green}/lib\t\t\t${c_lcyan}(--strip-unneeded)${c_reset}"
  find /lib		-type f \( -name \*.so* -a ! -name \*dbg \) -exec strip --strip-unneeded {} ';' > /dev/null 2>&1
  evalretkill

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}.so \t${c_green}/usr/lib\t\t${c_lcyan}(--strip-unneeded)${c_reset}"
  find /usr/lib		-type f \( -name \*.so* -a ! -name \*dbg \) -exec strip --strip-unneeded {} ';' > /dev/null 2>&1
  evalretkill

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}all \t${c_green}/bin\t\t\t${c_lcyan}(--strip-all)${c_reset}"
  find /bin		-type f -exec strip --strip-all {} ';' > /dev/null 2>&1
  evalretkill
  
  aprint_ret "${c_blue}stripping\t: ${c_lcyan}all \t${c_green}/sbin\t\t\t${c_lcyan}(--strip-all)${c_reset}"
  find /sbin		-type f -exec strip --strip-all {} ';' > /dev/null 2>&1
  evalretkill

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}all \t${c_green}/usr/bin\t\t${c_lcyan}(--strip-all)${c_reset}"
  find /usr/bin		-type f -exec strip --strip-all {} ';' > /dev/null 2>&1
  evalretkill

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}all \t${c_green}/usr/sbin\t\t${c_lcyan}(--strip-all)${c_reset}"
  find /usr/sbin		-type f -exec strip --strip-all {} ';' > /dev/null 2>&1
  evalretkill

  aprint_ret "${c_blue}stripping\t: ${c_lcyan}all \t${c_green}/usr/libexec\t\t${c_lcyan}(--strip-all)${c_reset}"
  find /usr/libexec	-type f -exec strip --strip-all {} ';' > /dev/null 2>&1
  evalretkill

  aprint_nc
  aprint "stripping is complete."
  aprint_nc
  exit 0
 elif [ "$answer" != "${answer#[Nn]}" ];	then	exit 1
 else aprint_fail "input Yy or Nn, exiting.";		exit 1
fi
