#!/bin/env bash
# check if openvpn is on
if [ -z "$(pidof openvpn)" ]
 then memepn="vpn off"
 else memepn="vpn on"
fi

# set interface
bwadapter=$(ip route | awk '/^default/ { print $5 ; exit }')

# path for storing old data
bwpath="/dev/shm/$(basename $0)-${bwadapter}"

#grabbing rx/tx data for interface and get time
read rx < "/sys/class/net/${bwadapter}/statistics/rx_bytes"
read tx < "/sys/class/net/${bwadapter}/statistics/tx_bytes"
time=$(date +%s)

# write current data if file does not exist
if ! [[ -f "${bwpath}" ]]; then
 echo "${time} ${rx} ${tx}" > "${bwpath}"
 chmod 0666 "${bwpath}"
fi

# read previous state and update data storage
read old < "${bwpath}"
echo "${time} ${rx} ${tx}" > "${bwpath}"

# parse old data and calculate the time passed
old=(${old//;/ })
time_diff=$(( $time - ${old[0]} ))

# sanity check: has a positive amount of time passed
if [ ! "${time_diff}" -gt 0 ]; then exit 1; fi

# calc bytes transferred, and their rate in byte/s
rx_diff=$(( $rx - ${old[1]} ))
tx_diff=$(( $tx - ${old[2]} ))
rx_rate=$(( $rx_diff / $time_diff ))
tx_rate=$(( $tx_diff / $time_diff ))

# additional variables for total bandwidth usage for the session
total_rx=$(echo "$(($rx / 1048576))")
total_tx=$(echo "$(($tx / 1048576))")

# this portion modified to get rid of the kbps to mbps transition
rx_kib=$(echo "$(($rx_rate / 1024))")
tx_kib=$(echo "$(($tx_rate / 1024))")

printf "${rx_kib}(${total_rx})rx ${tx_kib}(${total_tx})tx ${memepn}\n"
