#!/bin/env bash
## functions ###
# check_root
check_root (){
 if [ "$(id -u)" -ne 0 ]; then
  echo -e "\n ! this script must be run by root.\n"
 exit 1
 fi
}

# update
update (){
 check_root
 echo " * running /usr/sbin/make-ca -g."	&&
 make-ca -g > /dev/null 2>&1			&& echo " ** done" &&
 echo " * running /usr/sbin/update-pciids."	&&
 update-pciids > /dev/null 2>&1			&& echo " ** done" &&
 echo " * running /usr/sbin/ntpd -q -g."	&&
 ntpd -q -g > /dev/null 2>&1			&& echo " ** done" &&
 echo " * running the usbutils thingy"		&&
 wget http://www.linux-usb.org/usb.ids -O /usr/share/hwdata/usb.ids\
 > /dev/null 2>&1				&& echo " ** done"
 echo " *** system is up to date."
}

# fetch
fetch (){
 cat /mss/bin/ascii

 dist=$(grep "ID" "/etc/lsb-release" | sed 's/DISTRIB_ID\=//g;s/\"//g')
 cpu=$(lscpu | grep "Model name" | sed -r 's/Model name://g;s/^ *//g;s/CPU //g;s/\s+\S+$//;s/\s+\S+$//' | cut -d' ' -f2-)
 freq_old=$(lscpu | grep "CPU MHz:" | sed 's/CPU MHz://g;s/[.].*$//;s/[[:blank:]]//g')
 freq=$(echo ${freq_old} / 1000 | bc -l | cut -c-5)
 kern=$(uname -r)
 upt=$(uptime --pretty | sed 's/up //;s/\ days\?,/d/;s/\ hours\?,\?/h/;s/\ minutes\?/m/')
 tot=$(free -h | sed -n '2p' | awk '{print $2}' | sed 's/Gi//g')
 use=$(free -h | sed -n '2p' | awk '{print $3}' | sed 's/Gi//g')

 echo -e " * dist: ${dist} \n * kern: ${kern} \n * sh  : $SHELL \n \
* upt : ${upt} \n * cpu : ${cpu} @ ${freq}GHz \n * mem : ${use}/${tot}G \n"
}

# ch
ch (){
 check_root
 export GNT="/mnt/dev/gentoo"
 echo " * mounting and chrooting to: $GNT"
 mount -R	/dev	$GNT/dev	&&
 mount -R	/proc	$GNT/proc	&&
 mount -R	/sys	$GNT/sys	&&
 mount -R	/run	$GNT/run	&&
 chroot		$GNT	/bin/zsh	&&
 umount -l	$GNT/{dev,proc,sys,run} &&
 echo " * exited from chroot and umounted dirs."
}

# kerninst
kerninst (){
 check_root
 cp -iv arch/x86/boot/bzImage    /boot/vmlinuz
 cp -iv System.map               /boot/System.map
 cp -iv .config                  /boot/config
}

# pkgcount
pkgcount (){
 count=$(wc -l /mss/raw-packages.txt | awk '{print $1}')
 repo="/mnt/mss/stuff/techy-bits/git-repositories/mssLinux"
 gitdf_pre=$(diff /mss/raw-packages.txt $repo/pkg-management/raw-packages.txt)
 gitstat_pre=$(cd $repo && git status -s)

 if [ -z "$gitdf_pre" ]
  then gitdf="there's no difference."
  else gitdf=$(echo -e "\n\n$gitdf_pre")
 fi

 if [ -z "$gitstat_pre" ]
  then gitstat="clean."
  else gitstat="uncommited changes are listed below.\n\n$gitstat_pre"
 fi

 echo -e "\n * local package count: $count\n * local and git diff : $gitdf\n * git repo status    : $gitstat\n"
}
### end functions ###


### flags ###
while test $# -gt 0; do
 case "$1" in
  -h|--help)
   shift
   echo -e	"\n -h or --help		print this dialogue."
   echo 	" -f or fetch		run mssfetch."
   echo		" -u or update		run update. "
   echo		" -c or ch		mount and chroot to: $GNT."
   echo		" -k or kerninst		install compiled kernel."
   echo -e	" -p or pkgcount		display repo and package status.\n"
   shift
   ;;
  -f|fetch)	shift; fetch;				shift;;
  -u|update)	shift; update;				shift;;
  -c|ch)	shift; ch;				shift;;
  -k|kerninst)	shift; kerninst;			shift;;
  -p|pkgcount)  shift; pkgcount;			shift;;
  *)		echo "$1 is not a recognized flag!";	break;;
 esac
done
### end flags ###
