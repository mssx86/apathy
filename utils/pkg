#!/mss/bin/sh
. /mss/bin/apathy-funcs

localraw="/mss/raw-packages.txt"
 localmd="/mss/packages.md"
 reporaw="/mss/repo/pkg-management/raw-packages.txt"
  repomd="/mss/repo/pkg-management/packages.md"

[ ! -f ${localraw} ] && aprint_fail "(local) ${cl_grn}raw-packages.txt${c_res} is not found."
[ ! -f ${localmd}  ] && aprint_fail "(local) ${cl_grn}packages.md${c_res} is not found."
[ ! -f ${reporaw}  ] && aprint_fail "(repo) ${cl_grn}raw-packages.txt${c_res} is not found."
[ ! -f ${repomd}   ] && aprint_fail "(repo) ${cl_grn}raw-packages.txt${c_res} is not found."

from(){            awk '/'$1'/{print $2}' "${localmd}";}

print_removed(){   awk '/^\[r\]/ {print $4}' "${localmd}";}
print_installed(){ awk '/^\[d\]/ {print $4}' "${localmd}";}
print_ondemand(){  awk '/^\[o\]/ {print $4}' "${localmd}";}
print_help(){      aprint_usage "{from|pver|sync|stats|convert}{d|o|r}."; exit 1;}

sync(){ 
 aprint_ret "(repo -> local) syncing raw-packages.txt"
  cp "${reporaw}" "${localraw}"
 evalret
 aprint_ret "(repo -> local) syncing packages.md"
  cp "${repomd}" "${localmd}"
 evalret
}

convert_lists(){
 aprint_ret "(repo -> repo) generating raw-packages.txt."
  grep -v -e \# -e \` -e \! "${repomd}" | awk '/\[d\]/ {print $4}' > "${reporaw}"
 evalret
}

stats(){
 gitdf_pre=$(diff -u "${localraw}" "${reporaw}"                      \
             | awk '/^---/   {print "- local"" --->",$3"\t"$4};      \
                    /^\+\+\+/ {print "+ git"" ----->",$3"\t"$4"\n"}; \
                    /^\+[a-z,0-9]/;                                  \
                    /^-[a-z,0-9]/')

 [ -z "$gitdf_pre" ] \
  && gitdf="none" || gitdf="\n\n$gitdf_pre\n"

 [ -z "$(cd /mss/repo && git status -s)" ] \
  && gitstat="clean" || gitstat="dirty"

 
    partsize="$(df / | awk 'NR==2 {print $3/1024"mib"}')"
 c_installed="$(print_installed | wc -l)"
   c_removed="$(print_removed   | wc -l)"
  c_ondemand="$(print_ondemand  | wc -l)"

 aprint_nc
 aprint "${cb_red}total partition size\t${cb_blu}:${c_res} ${partsize}"
 aprint "${cb_red}local package count\t${cb_blu}:${c_res} ${c_installed} (+${c_ondemand})"
 aprint "${cb_red}removed packages\t${cb_blu}:${c_res} ${c_removed}"
 aprint "${cb_red}local and git diff\t${cb_blu}:${c_res} ${gitdf}"
 aprint "${cb_red}git repo status\t${cb_blu}:${c_res} ${gitstat}"
 aprint_nc
}

pver(){
     tls=$(openssl version | awk '{print tolower($0)}')
    libc=$(ldd 2>&1 \
           | awk 'FNR == 1 {a=$1; b=$2; d=$3}; \
                  FNR == 2 {c=$2}              \
                  END{print a,b,c,d}')
    trpl=$(gcc -dumpmachine)
     cca=$(gcc -v 2>&1 | awk '/version / {sub(/version | $/,""); print}')
     ccb=$(clang --version | awk 'NR==1 {print $1,$2,$4}')

 aprint_nc
 lsdetail "tls " "$tls "
 lsdetail "libc" "$libc"
 lsdetail "cca " "$cca "
 lsdetail "ccb " "$ccb "
 lsdetail "trpl" "$trpl"
 aprint_nc
}

case "$1" in
    from) from "$2"       ;;
    pver) pver            ;;
    sync) sync            ;;
   stats) stats           ;;
 convert) convert_lists   ;;
       d) print_installed ;;
       o) print_ondemand  ;;
       r) print_removed   ;;
       *) print_help      ;;
esac
