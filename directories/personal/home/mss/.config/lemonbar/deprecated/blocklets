#!/mss/bin/sh
_pgid(){
 read pid_pre < /tmp/lemonbar.pid
 pid="%{A:kill -9 -$(cat /tmp/lemonbar.pid):}${pid_pre}%{A}"
 echo "${pid}" > "${tmpdir}"/pgid
}

_uptime(){
 while true; do
  utime=$(cat /proc/uptime | awk '{print $1}')

  printf "%dd %dh %dm \n"                  \
   "$(echo "${utime}/86400"        | bc)"  \
   "$(echo "(${utime}%86400)/3600" | bc)"  \
   "$(echo "(${utime}%3600)/60"    | bc)" > "${tmpdir}"/uptime
  sleep 60
 done
}

bw(){
 bwadapter="eth0"
 bwpath="/tmp/bw.tmp"
 read rx < "/sys/class/net/${bwadapter}/statistics/rx_bytes"
 read tx < "/sys/class/net/${bwadapter}/statistics/tx_bytes"

 if [ ! -f "${bwpath}" ]; then echo "${time} ${rx} ${tx}" > "${bwpath}"; chmod 0666 "${bwpath}"; fi
 
 while true; do
  if [ -z "$(pidof openvpn)" ]; then memepn=off; else memepn=on; fi

  read rx < "/sys/class/net/${bwadapter}/statistics/rx_bytes"
  read tx < "/sys/class/net/${bwadapter}/statistics/tx_bytes"
  time=$(date +%s)

  read old < "${bwpath}"
  echo "${time} ${rx} ${tx}" > "${bwpath}"

  time_diff=$(( $time - $(echo $old | awk '{print $1}') ))

  if [ ! "${time_diff}" -gt 0 ]; then exit 1; fi

  rx_diff=$(( $rx - $(echo $old | awk '{print $2}') ))
  tx_diff=$(( $tx - $(echo $old | awk '{print $3}') ))
  rx_rate=$(( $rx_diff / $time_diff ))
  tx_rate=$(( $tx_diff / $time_diff ))

  total_rx=$(echo "$(($rx / 1048576))")
  total_tx=$(echo "$(($tx / 1048576))")

  rx_kib=$(echo "$(($rx_rate / 1024))")
  tx_kib=$(echo "$(($tx_rate / 1024))")

  printf "${rx_kib}(${total_rx})rx ${tx_kib}(${total_tx})tx ${memepn}\n" > "${tmpdir}"/bw
  sleep 1
 done
}

cpustat(){
 while true; do
  s1_data=$(grep cpu /proc/stat | head -1)
  s1_total=$(($(echo $s1_data | awk '{gsub(" ","+"); gsub("cpu","0"); print}')))
  s1_col4=$(echo $s1_data | awk '{print $5}')
 sleep 1
  s2_data=$(grep cpu /proc/stat | head -1)
  s2_total=$(($(echo $s2_data | awk '{gsub(" ","+"); gsub("cpu","0"); print}')))
  s2_col4=$(echo $s2_data | awk '{print $5}')

  used=$(((${s2_total} - ${s1_total}) - (${s2_col4} - ${s1_col4})))
  perc=$((100 * ${used} / (${s2_total} - ${s1_total})))

  temp=$(sensors coretemp-isa-0000 \
       | awk '/Physical/ {gsub("+",""); gsub("Â°C",""); print $4"c"}')

  echo "${perc}%(${temp})" > "${tmpdir}"/cpustat
 done
}

cap_alsa(){
 while true; do
  cap_data=$(amixer -D default get Capture | awk 'NR==6 {gsub("\\[",""); gsub("\\]",""); print}')
  cmchk=$(echo $cap_data | awk '{print $7}')

  if [ "$cmchk" = "off" ]
   then cap_stat="muted"
   else cap_stat="$(echo ${cap_data} | awk '{print $6}')"
  fi

  cap_print="%{A3:amixer -q -D default sset Capture toggle > /dev/null:}\
%{A4:amixer -q -D default sset Capture 3dB+ unmute > /dev/null:}\
%{A5:amixer -q -D default sset Capture 3dB- unmute > /dev/null:}\
${cap_stat}%{A}%{A}%{A}"

  echo ${cap_print} > "${tmpdir}"/cap_alsa
  sleep 1
 done
}

mas_alsa(){
 while true; do
  mas_data=$(amixer -D default get Master | awk 'NR==5 {gsub("\\[",""); gsub("\\]",""); print}')
  mmchk=$(echo $mas_data | awk '{print $6}')

  if [ "$mmchk" = "off" ]
   then mas_stat="muted"
   else mas_stat="$(echo ${mas_data} | awk '{print $4}')"
  fi

  mas_print="%{A3:amixer -q -D default sset Master toggle > /dev/null:}\
%{A4:amixer -q -D default sset Master 3dB+ unmute > /dev/null:}\
%{A5:amixer -q -D default sset Master 3dB- unmute > /dev/null:}\
${mas_stat}%{A}%{A}%{A}"

  echo "${mas_print}" > "${tmpdir}"/mas_alsa
  sleep 1
 done
}

mem(){
 while true; do
  mem_print=$(free --mebi | awk 'NR==2 {print $3"mib"}')
  echo "${mem_print}" > "${tmpdir}"/mem
  sleep 1
 done
}

mpdstat(){
 while true; do
  if [ ! -z $(pidof mpd) ]
   then
    mpc_status="$(mpc status)"
  
    case "$(echo "${mpc_status}" | head -1)" in
     *volume:*)
      state="mpd is idle"
     ;;
     *)
      artist_pre=$(mpc --format '[%artist%]' current)
      song_pre=$(mpc --format '[%title%]' current)
  
      if [ -z "${artist_pre}" ] || [ -z "${song_pre}" ]
       then
        song=$(mpc --format "[%file%]" current | sed 's/unorganized\///;s/.mp3//;s/.flac//;s/.wav//' \
         | awk -v len=35 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')
       else
        artist=$(echo "${artist_pre}" \
         | awk -v len=20 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')
        art=$(echo "${song_pre}" \
         | awk -v len=25 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')
        song="${artist} - ${art}"
      fi
  
      main="$(echo "${mpc_status}" | awk 'NR==2 {print $3}' | sed 's/\// /g;s/:/ /g')"
  
      curr_mins="$(echo "${main}" | awk '{print $1}')"
      curr_secs="$(echo "${main}" | awk '{print $2}')"
      curr=$(echo "$curr_secs + ($curr_mins * 60)" | bc -l)
  
      total_mins="$(echo "${main}" | awk '{print $3}')"
      total_secs="$(echo "${main}" | awk '{print $4}')"
      total=$(echo "$total_secs + ($total_mins * 60)" | bc -l)
  
      dur_pre="$(($total - $curr))"
  
      if [ "$dur_pre" -gt "3599" ]
       then dur="$(printf '%02d:%02d:%02d\n' $(($dur_pre/3600)) $(($dur_pre%3600/60)) $(($dur_pre%60)))"
       else dur="$(printf '%02d:%02d\n' $(($dur_pre%3600/60)) $(($dur_pre%60)))"
      fi
  
      plpa="$(echo "${mpc_status}" | awk 'NR==2 {print $1}')"
  
      if [ "${plpa}" = "[paused]" ]
       then state="[paused] ${song}"
       else state="${song} ${dur}"
      fi
     ;;
    esac
   else
    state="mpd is not running"
  fi

  mpd_print="%{A:mpc next:}\
%{A2:mpc toggle > /dev/null:}\
%{A3:mpc prev > /dev/null:}\
%{A4:mpc volume +10 > /dev/null:}\
%{A5:mpc volume -10 > /dev/null:}\
${state}\
%{A}%{A}%{A}%{A}%{A}"

  echo "${mpd_print}" > "${tmpdir}"/mpdstat

  sleep 1
 done
}

mpdvol(){
 while true; do
  vol="$(mpc vol | sed 's/volume://;s/[[:space:]]//g;')"
  if [ "${vol}" = "0%" ]; then mpdvol_state="muted"; else mpdvol_state="${vol}"; fi

  mpdvol_print="%{A3:mpc toggle> /dev/null:}\
%{A4:mpc vol +5 > /dev/null:}\
%{A5:mpc vol -5 > /dev/null:}\
${mpdvol_state}\
%{A}%{A}%{A}"

  echo "${mpdvol_print}" > "${tmpdir}"/mpdvol
  sleep 1
 done
}

weat(){
 while true; do
  stats_now=$(curl -s -H "Origin: https://mgm.gov.tr" --request GET \
   "https://servis.mgm.gov.tr/web/sondurumlar?merkezid=97101" | jq '.[] |
   .sicaklik, .nem, .ruzgarHiz, .yagis00Now, .hadiseKodu')

  if [ ! -z "${stats_now}" ]
   then
    weat_print=$(echo $stats_now | tr '[:upper:]' '[:lower:]' | \
     awk '{gsub("\"",""); print $1"c",$2"%",substr($3, 1, 4)"km/h",$4"mm",$5}')
   else
    weat_print="no data"
  fi

  echo "updating"      > "${tmpdir}"/weat; sleep 0.5
  echo "updating."     > "${tmpdir}"/weat; sleep 0.5
  echo "updating.."    > "${tmpdir}"/weat; sleep 0.5
  echo "updating..."   > "${tmpdir}"/weat; sleep 0.5
  echo "${weat_print}" > "${tmpdir}"/weat
  sleep 298
 done
}

wspace(){
 while true; do
  ws1="${c6} I${cr}\
%{A:wmctrl -s 2:} II%{A}\
%{A:wmctrl -s 3:} III%{A}\
%{A:wmctrl -s 4:} IV%{A}"

  ws2="%{A:wmctrl -s 1:} I %{A}\
${c6}II${cr}\
%{A:wmctrl -s 3:} III%{A}\
%{A:wmctrl -s 4:} IV%{A}"

  ws3="%{A:wmctrl -s 1:} I%{A}\
%{A:wmctrl -s 2:} II %{A}\
${c6}III${cr}\
%{A:wmctrl -s 4:} IV%{A}"

  ws4="%{A:wmctrl -s 1:} I%{A}\
%{A:wmctrl -s 2:} II%{A}\
%{A:wmctrl -s 3:} III %{A}\
${c6}IV${cr}"

  curr_ws="$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')"
  curr_before="$((${curr_ws} - 1))"
  curr_after="$((${curr_ws} + 1))"
   [ "${curr_before}" -eq 0 ] && curr_before="4"
   [ "${curr_after}" -eq 5 ]  && curr_after="1"
 
  case "${curr_ws}" in
   1) wspace_pre="${ws1}" ;;
   2) wspace_pre="${ws2}" ;;
   3) wspace_pre="${ws3}" ;;
   4) wspace_pre="${ws4}" ;;
  esac
  
  wspace="%{A5:wmctrl -s ${curr_before}:}%{A4:wmctrl -s ${curr_after}:}${wspace_pre}%{A5}%{A4}"
  echo "${wspace}" > "${tmpdir}"/wspace
  sleep 0.2
 done
}

wspace_simple(){
 while true; do
  curr_ws="$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')"
  curr_before="$((${curr_ws} - 1))"
  curr_after="$((${curr_ws} + 1))"
  [ "${curr_before}" -eq 0 ] && curr_before="4"
  [ "${curr_after}"  -eq 5 ] && curr_after="1"

wspace="%{A5:wmctrl -s ${curr_before}:}\
%{A4:wmctrl -s ${curr_after}:}\
${f2} workspace ${f3}[${fr}${curr_ws}${f3}]\
%{A5}%{A4}"

  echo "${wspace}" > "${tmpdir}"/wspace
  sleep 0.1
 done
}
