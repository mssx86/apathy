#!/mss/bin/sh
# 1 > pick statusbar type
case "$1" in
 x|tty) taipu="$1" ;;
 *    ) printf "pick either x or tty as \$1.\n"; exit 1 ;;
esac

# 2 > functions
whattodo(){
case "$taipu" in
 tty) echo "$1"           ;;
 x)   xsetroot -name "$1" ;;
esac ;}

gettitle(){
 mpc -f "[%file%]" current \
  | awk '{gsub(/^.*\/|\.[^.]*$/,"");      \
          if (length($0) > 30)            \
           print substr($0, 1, 27) "..."; \
          else print }' ;}

getartist(){
 echo "$artist_pre"                       \
  | awk '{if (length($0) > 20)            \
           print substr($0, 1, 17) "..."; \
          else print }' ;}

getsong(){
 echo "$song_pre"                                   \
  | awk '{if (length($0) > '$len')                  \
           print substr($0, 1, '$((len-3))') "..."; \
          else print }' ;}

calcdur(){ dur_pre=$(echo "${mpc_status}"         \
            | awk 'NR==2 {gsub("\/|:"," ");       \
         curr=($4*60)+$5; t=($6*60)+$7} \
         END {print t-curr}')

 [ "$dur_pre" -gt 3599 ] \
  && printf '%02d:%02d:%02d\n'      \
            "$(($dur_pre/3600))"    \
            "$(($dur_pre%3600/60))" \
            "$(($dur_pre%60))"     \
  || printf '%02d:%02d\n'           \
            "$(($dur_pre%3600/60))" \
            "$(($dur_pre%60))" ;}

# 3 > action
while :; do
 # bandwidth usage
 read rx1 < "/sys/class/net/wlan0/statistics/rx_bytes"
 read tx1 < "/sys/class/net/wlan0/statistics/tx_bytes"
  sleep 1
 read rx2 < "/sys/class/net/wlan0/statistics/rx_bytes"
 read tx2 < "/sys/class/net/wlan0/statistics/tx_bytes"

 kb_rx="$(echo "(${rx2} - ${rx1}) / 1024" | bc)"
 kb_tx="$(echo "(${tx2} - ${tx1}) / 1024" | bc)"

 t_rx="$(echo "${rx2} / 1048576" | bc)"
 t_tx="$(echo "${tx2} / 1048576" | bc)"

 bwfinal="${kb_rx}↓↑${kb_tx} [${t_rx}+${t_tx}]"

 # mpd state
 if [ -z "$(pidof mpd)" ];
  then _mpd="dead"
  else
   mpc_status="$(mpc status)"
 
   if [ "$(echo "$mpc_status" | wc -l)" -lt 3 ];
    then _mpd="idle"
    else
     artist_pre="$(mpc -f %artist% current)"
       song_pre="$(mpc -f %title%  current)"
  
     [ -z "${artist_pre}" ] || [ -z "${song_pre}" ] \
      && title="$(gettitle)"                        \
      || case "$@" in
          noartist) title="$(len=35 getsong)"                ;;
                 *) title="$(getartist) - $(len=20 getsong)" ;;
         esac
      
     [ ! -z "$(echo "${mpc_status}" | awk '/\[paused\]/')" ] \
      && _mpd="[#] ${title}" || _mpd="[$(calcdur)] ${title}"
   fi
 fi

 # loadnmem
 lavg="$(awk '{print $1}'                      /proc/loadavg)"
 _mem="$(awk '/Avail/ {print int($2/1024)"m"}' /proc/meminfo)"

 # temps
 temp="$(cut -b1-2 /sys/devices/platform/coretemp.0/hwmon/hwmon*/temp1_input)c"
 #fan="$(awk 'FNR == 2 {print $2"r"}' /proc/acpi/ibm/fan)"

 # battery
 if [ -f /sys/class/power_supply/BAT0/status ]
  then
   read bat0perc < /sys/class/power_supply/BAT0/capacity
   [ "$(cat /sys/class/power_supply/BAT0/status)" = "Discharging" ] \
    && bat0stat="d" || bat0stat="c"

   bat0="${bat0stat}%${bat0perc}"
  else
   bat0="nb"
 fi

 # governor
 gov="$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor \
        | awk '{print substr($1, 1, 3);}')"

 # date
 dat="$(date '+%a%d %H:%M:%S')"

 # weather
 read weat < /tmp/weather.tmp

 whattodo " ${bwfinal} ¦ ${lavg} ${temp} ${_mem} ${gov} ¦ ${_mpd} ¦ ${dat} ${bat0} "
done
