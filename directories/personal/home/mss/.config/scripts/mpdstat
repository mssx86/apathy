#!/mss/bin/sh
# check if mpd is running
if [ ! -z $(pidof mpd) ]
 then	 
  mpc_status="$(mpc status)"

  case "$(echo "${mpc_status}" | head -1)" in
   *volume:*)
    state="mpd is idle"
   ;;
   *) 
    # a >> export artist and title
    artist_pre=$(mpc --format "[%artist%]" current)
    song_pre=$(mpc --format "[%title%]" current)
    
    # b >> check if song is labeled or not
    if [ -z "${artist_pre}" ] || [ -z "${song_pre}" ]
     then
      song=$(mpc --format "[%file%]" current | sed 's/unorganized\///;s/.mp3//;s/.flac//;s/.wav//' \
       | awk -v len=35 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')
     else
      artist=$(echo "${artist_pre}" \
       | awk -v len=20 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')
      art=$(echo "${song_pre}" \
       | awk -v len=25 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')
      song="${artist} - ${art}"
    fi

    # c >> get duration
    main="$(echo "${mpc_status}" | awk 'NR==2 {print $3}' | sed 's/\// /g;s/:/ /g')"
  
    curr_mins="$(echo "${main}" | awk '{print $1}')"
    curr_secs="$(echo "${main}" | awk '{print $2}')"
    curr=$(echo "$curr_secs + ($curr_mins * 60)" | bc -l)
  
    total_mins="$(echo "${main}" | awk '{print $3}')"
    total_secs="$(echo "${main}" | awk '{print $4}')"
    total=$(echo "$total_secs + ($total_mins * 60)" | bc -l)
  
    dur_pre="$(($total - $curr))"
  
    # d >> check if longer than 3599 secs
    if [ "$dur_pre" -gt "3599" ]
     then dur="$(printf '%02d:%02d:%02d\n' $(($dur_pre/3600)) $(($dur_pre%3600/60)) $(($dur_pre%60)))"
     else dur="$(printf '%02d:%02d\n' $(($dur_pre%3600/60)) $(($dur_pre%60)))"
    fi
    
    # e >> get play/pause state and export final state
    plpa="$(echo "${mpc_status}" | awk 'NR==2 {print $1}')"
  
    if [ "${plpa}" = "[paused]" ]
     then state="[paused] ${song}"
     else state="${song} ${dur}"
    fi
   ;;
  esac
 else
  state="mpd is not running"
fi
echo "${state}"

# i3blocks interaction
case $BLOCK_BUTTON in
 1) mpc next;       pkill -RTMIN+1 i3block;;
 2) mpc toggle;     pkill -RTMIN+1 i3block;;
 3) mpc prev;       pkill -RTMIN+1 i3block;;
 4) mpc volume +10                        ;;
 5) mpc volume -10	                  ;;
esac
