#!/mss/bin/sh
# apathy-musl 1.2 - mss@tutanota.de
# build script for apathy-browser, version 3.

. /mss/bin/apathy-funcs

# a >> check if variables are set
[ -z $1 ] && aprint_fail "specify uxp tarball as \$1."       && exit 1
[ -z $2 ] && aprint_fail "specify pale moon tarball as \$2." && exit 1

# b >> script vars
     logdir="/mss/work/logs"
   saucedir="/mss/work/sauces"

    repodir="/mss/repo/pkg-management/build-configs/www-browser/apathy-browser"
   filesdir="${repodir}/files"
   branding="${repodir}/branding"

    uxpfull="$(echo ${1}       | sed 's/\.tar//;s/\.[gx]z//')"
     pmfull="$(echo ${2}       | sed 's/\.tar//;s/\.[gx]z//')"
     uxpver="$(echo ${uxpfull} | sed 's/UXP-RELBASE_//')"
      pmver="$(echo ${pmfull}  | sed 's/Pale-Moon-//;s/_Release//')"

     srcdir="${PWD}/${pmfull}"
    instdir="${srcdir}/KEK"
   pmappdir="/usr/lib/apathy-browser-${pmver}"

rdr="${logdir}"/$(date "+%Y%m%d_%H%M%S")-apathy-browser-"${pmver}".log

# c >> check if specified tarballs actually exist
[ ! -f "${saucedir}/${1}" ] && aprint_fail "${1} does not exist." && exit 1
[ ! -f "${saucedir}/${2}" ] && aprint_fail "${2} does not exist." && exit 1

# d >> build vars
export               CHOST="x86_64-apathy-linux-musl"
export                  CC="${CHOST}-gcc"
export                 CXX="${CHOST}-g++"
export              CFLAGS="-march=native -mtune=native -O2 -w"
export            CXXFLAGS="${CFLAGS}"
export             LDFLAGS="-Wl,-rpath=${pmappdir}"

export           MOZCONFIG="$srcdir/mozconfig"
export MOZBUILD_STATE_PATH="$srcdir/mozbuild"
export      MOZ_LINK_FLAGS="${LDFLAGS}"

# e >> print vars
aprint_nc
lsdetail "pm version"  "${pmver}"
lsdetail "uxp version" "${uxpver}"
aprint_nc
lsdetail "cflags"      "${CFLAGS}"
lsdetail "cxxflags"    "${CXXFLAGS}"
lsdetail "ldflags"     "${LDFLAGS}"
aprint_nc

# f1 >> extract the pale moon code
aprint_ret "extracting ${cl_grn}${2}${c_res}."
 tar xf "${saucedir}/${2}" > "$rdr" 2>&1
evalretkill

# f2 >> extract the uxp code
aprint_ret "extracting ${cl_grn}${1}${c_res}."
 prevpwd="$PWD"
 cd "${srcdir}"
 tar xf "${saucedir}/${1}" >> "$rdr" 2>&1
evalretkill

# f3 >> move uxp to platform
aprint_ret "moving ${cl_grn}uxp${c_res} to ${cl_grn}platform/${c_res}."
 cd "$prevpwd"
 rm -rfv "${srcdir}/platform"                        >> "$rdr" 2>&1
 mv -v   "${srcdir}/${uxpfull}" "${srcdir}/platform" >> "$rdr" 2>&1
evalretkill

# g1 >> cd to work
aprint_ret "cd to ${cl_grn}${srcdir}${c_res}."
 cd "${srcdir}"
evalretkill

# g2 >> copy mozconfig
aprint_ret "copying ${cl_grn}mozconfig${c_res}."
 cp -v "${filesdir}"/mozconfig "${srcdir}"/mozconfig >> "$rdr" 2>&1
evalretkill

# g3 >> apply branding
aprint_ret "copying the ${cl_grn}apathy-browser branding${c_res} files."
 cp -v "${branding}"/bookmarks.html.in        \
 "${srcdir}"/palemoon/locales/generic/profile/           >> "$rdr" 2>&1 &&
 cp -v "${branding}"/aboutDialog.xul          \
 "${srcdir}"/palemoon/base/content/                      >> "$rdr" 2>&1 &&
 cp -v "${branding}"/browserconfig.properties \
 "${srcdir}"/palemoon/branding/shared/locales/           >> "$rdr" 2>&1 &&
 cp -v "${branding}"/preferences.inc          \
 "${srcdir}"/palemoon/branding/shared/pref/              >> "$rdr" 2>&1 &&
 cp -v "${branding}"/uaoverrides.inc          \
 "${srcdir}"/palemoon/branding/shared/pref/              >> "$rdr" 2>&1 &&
 cp -v "${branding}"/branding.nsi             \
 "${srcdir}"/palemoon/branding/unofficial/               >> "$rdr" 2>&1 &&
 cp -v "${branding}"/configure.sh             \
 "${srcdir}"/palemoon/branding/unofficial/               >> "$rdr" 2>&1 &&
 cp -v "${branding}"/brand.dtd                \
 "${srcdir}"/palemoon/branding/unofficial/locales/en-US/ >> "$rdr" 2>&1 &&
 cp -v "${branding}"/brand.properties         \
 "${srcdir}"/palemoon/branding/unofficial/locales/en-US/ >> "$rdr" 2>&1 &&
 cp -v "${branding}"/palemoon-branding.js     \
 "${srcdir}"/palemoon/branding/unofficial/pref/          >> "$rdr" 2>&1 &&
 cp -v "${branding}"/about-background.png     \
 "${srcdir}"/palemoon/branding/unofficial/content/       >> "$rdr" 2>&1
evalretkill

# h1 >> check everything and ask to run mach
aprint_nc
aprint_ask "ready to run mach, shall we continue? (y/n): "
read answerbuild

case "$answerbuild" in
 y|Y|yes)
  aprint "current date is ${cl_grn}$(date '+%a %d %I:%M:%S%P')${c_res}."
  aprint "redirecting output to ${cl_grn}${rdr}${c_res}."
  aprint_ret "running mach."
  datebefore=$(date +%s)

   /bin/busybox time \
    ./mach build >> "$rdr" 2>&1
  evalretkill

  dateafter=$(date +%s)
  timespent=$(($dateafter - $datebefore))
  humantime=$(printf "%dd %dh %dm\n"                    \
            "$(echo "${timespent}/86400"        | bc)"  \
            "$(echo "(${timespent}%86400)/3600" | bc)"  \
            "$(echo "(${timespent}%3600)/60"    | bc)")

  aprint_nc
  aprint "build finished in ${cl_grn}${humantime}${c_res}."
 ;;
 *)
  aprint "not running make."
  aprint_nc
  exit 0
 ;;
esac

# h2 >> ask to install build
aprint_nc
aprint_ask "shall we run the installer? (y/n): "
read answerinst

case "$answerinst" in
 y|Y|yes)
  aprint_ret "installing to ${cl_grn}${instdir}${c_res}."
   DESTDIR="${instdir}" ./mach install >> "$rdr" 2>&1 
  evalret

  aprint_ret "removing unnecessary directories."
   rm -rf ${instdir}/usr/include                              &&
   rm -rf ${instdir}/usr/lib/apathy-browser-devel-${pmver}    &&
   rm -rf ${instdir}/usr/share
  evalret
 ;;
 *)
  aprint "not installing."
  exit 0
 ;;
esac
