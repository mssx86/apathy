#!/mss/bin/sh
# apathy-musl 1.2 - mss@waifu.club
# build script for pale moon, version 2

. /mss/bin/apathy-funcs

# a1 >> check if variables are set
[ -z $1 ] \
 && aprint_fail "no ${c_lcyan}uxp${c_reset} tarball specified as ${c_lcyan}\$1${c_reset}, exiting." \
 && exit 1
[ -z $2 ] \
 && aprint_fail "no ${c_lcyan}pale moon${c_reset} tarball specified as ${c_lcyan}\$2${c_reset}, exiting." \
 && exit 1

# a2 >> check if $1 and $2 exists in sauces
saucedir="/mss/work/sauces"
[ ! -f "${saucedir}/${1}" ] \
 && aprint_fail "${c_lcyan}${1}${c_reset} does not exist in saucedir, exiting" \
 && exit 1
[ ! -f "${saucedir}/${2}" ] \
 && aprint_fail "${c_lcyan}${2}${c_reset} does not exist in saucedir, exiting" \
 && exit 1

# b1 >> set the vars
uxpfull="$(echo ${1} | sed 's/.tar.gz//')"
pmfull="$(echo ${2} | sed 's/.tar.gz//')"

uxpver="$(echo ${uxpfull} | sed 's/UXP-RELBASE_//')"
pmver="$(echo ${pmfull} | sed 's/Pale-Moon-//;s/_Release//;s/.tar.gz//')"

logdir="/mss/work/logs"
repodir="/mss/repo/pkg-management/build-configs/www-browser/apathy-browser"
filesdir="${repodir}/files"
branding="${repodir}/branding"

srcdir="${PWD}/${pmfull}"
instdir="${srcdir}/KEK"

redirect_to="${logdir}"/$(date "+%Y%m%d_%H%M%S")-apathy-browser-"${pmver}".log
pmappdir="/usr/lib/apathy-browser-${pmver}"

export MOZBUILD_STATE_PATH="$srcdir/mozbuild"
export MOZCONFIG="$srcdir/mozconfig"
export CC=x86_64-apathy-linux-musl-gcc
export CXX=x86_64-apathy-linux-musl-g++ 
export CFLAGS="-march=native -mtune=native -O2 -Wno-format-overflow"
export CXXFLAGS="${CFLAGS}"
export LDFLAGS="-Wl,-rpath=${pmappdir}"
export LDFLAGS="${LDFLAGS} -Wl,--as-needed -Wl,--no-keep-memory -Wl,--stats"
export MOZ_LINK_FLAGS="${LDFLAGS}"

# c0 >> print vars
aprint_nc
lsdetail "pm version"  "${pmver}"
lsdetail "uxp version" "${uxpver}"
aprint_nc
lsdetail "cflags"      "${CFLAGS}"
lsdetail "cxxflags"    "${CXXFLAGS}"
lsdetail "ldflags"     "$(echo ${LDFLAGS} | fold -w 52)"
aprint_nc

# c1.1 >> extract the pale moon code
aprint_ret "extracting ${c_lcyan}${2}${c_reset}."
 tar xf "${saucedir}"/"${2}" > "$redirect_to" 2>&1
evalretkill

# c1.2 >> extract the uxp code
aprint_ret "extracting ${c_lcyan}${1}${c_reset}."
 prevpwd="$PWD"
 cd "${srcdir}"
 tar xf "${saucedir}"/"${1}" >> "$redirect_to" 2>&1
evalretkill

# c1.3 >> move uxp to platform
aprint_ret "moving the ${c_lcyan}uxp code${c_reset} to ${c_lcyan}platform/${c_reset}."
 cd "$prevpwd"
 rm -rfv "${srcdir}/platform"                        >> "$redirect_to" 2>&1
 mv -v   "${srcdir}/${uxpfull}" "${srcdir}/platform" >> "$redirect_to" 2>&1
evalretkill

# c2 >> cd to work
aprint_ret "cd to ${c_lcyan}${srcdir}${c_reset}."
 cd "${srcdir}"
evalretkill

# c3 >> copy mozconfig
aprint_ret "copying ${c_lcyan}mozconfig${c_reset}."
 cp -v "${filesdir}"/mozconfig "${srcdir}"/mozconfig >> "$redirect_to" 2>&1
evalretkill

# c4 >> apply branding
aprint_ret "copying the ${c_lcyan}apathy-browser branding${c_reset} files."
 cp -v "${branding}"/aboutDialog.xul          "${srcdir}"/palemoon/base/content/                      >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/browserconfig.properties "${srcdir}"/palemoon/branding/shared/locales/           >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/preferences.inc          "${srcdir}"/palemoon/branding/shared/pref/              >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/uaoverrides.inc          "${srcdir}"/palemoon/branding/shared/pref/              >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/branding.nsi             "${srcdir}"/palemoon/branding/unofficial/               >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/configure.sh             "${srcdir}"/palemoon/branding/unofficial/               >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/brand.dtd                "${srcdir}"/palemoon/branding/unofficial/locales/en-US/ >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/brand.properties         "${srcdir}"/palemoon/branding/unofficial/locales/en-US/ >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/palemoon-branding.js     "${srcdir}"/palemoon/branding/unofficial/pref/          >> "$redirect_to" 2>&1 &&
 cp -v "${branding}"/about-background.png     "${srcdir}"/palemoon/branding/unofficial/content/       >> "$redirect_to" 2>&1
evalretkill

# d1 >> check everything and ask to run mach
aprint_nc
aprint_ask "ready to run mach, shall we continue? (y/n): "

read answerbuild
 if [ "$answerbuild" != "${answerbuild#[Yy]}" ]
  then
   vi mozconfig
   aprint "current date is ${c_lcyan}$(date '+%a %d %I:%M:%S%P')${c_reset}."
   aprint "redirecting output to ${c_lcyan}${redirect_to}${c_reset}."
   aprint_ret "running mach."
   datebefore=$(date +%s)

    /bin/busybox time                \
    ./mach build >> "$redirect_to" 2>&1
   evalretkill

   dateafter=$(date +%s)
   timespent=$(($dateafter - $datebefore))
   humantime=$(printf "%dd %dh %dm\n"                    \
             "$(echo "${timespent}/86400"        | bc)"  \
             "$(echo "(${timespent}%86400)/3600" | bc)"  \
             "$(echo "(${timespent}%3600)/60"    | bc)")

   aprint_nc
   aprint "build finished in ${c_lcyan}${humantime}${c_reset}."
  else
   aprint "not running make."
   aprint_nc
   exit 0
 fi

# d2 >> ask to install build
aprint_nc
aprint_ask "shall we run the installer? (y/n): "

read answerinst
 if [ "$answerinst" != "${answerinst#[Yy]}" ]
  then
   aprint_ret "installing to ${c_lcyan}${instdir}${c_reset}."
    DESTDIR="${instdir}" ./mach install >> "$redirect_to" 2>&1 
   evalret

   aprint_ret "removing unnecessary directories."
    rm -rf ${instdir}/usr/include                              &&
    rm -rf ${instdir}/usr/lib/apathy-browser-devel-${pmver}    &&
    rm -rf ${instdir}/usr/share
   evalret
  else
   aprint "not installing."
   exit 0
 fi
