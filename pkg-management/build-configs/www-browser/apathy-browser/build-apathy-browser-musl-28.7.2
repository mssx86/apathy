#!/bin/sh

. /mss/bin/apathy-funcs

# a1 >> check if a tarball is selected
if	[ -z $1 ];		then aprint_fail "no archive selected, exiting.";	exit 1
elif	[ ! -f "${PWD}/${1}" ];	then aprint_fail "tarball doesn't exist, exiting.";	exit 1
fi

# a2 >> check if $1 is a pale moon tarball
case $1 in
 *PM*)	aprint_nc "archive is a pale moon source tarball." ;;
 *)	aprint_fail "${1} is not a pale moon source tarball, exiting."; exit 1 ;;
esac

# c >> set build vars
aprint_ret "setting variables required before mach."
export arname=$(echo UXP-$(echo $1 | sed 's/.tar.gz//'))			&&
export repo="/mss/repo/pkg-management/build-configs/www-browser/apathy-browser"	&&
export srcdir=/mss/work/UXP							&&
export _instdir="${srcdir}/KEK"							&&
export pkgname="apathy-browser musl (palemoon)"					&&
export pkgver=28.7.2								&&
export _pmappdir=/usr/lib/apathy-browser-${pkgver}				&&
export MOZBUILD_STATE_PATH="$srcdir/mozbuild"					&&
export MOZCONFIG="$srcdir/mozconfig"						&&
export CFLAGS="-march=native -O2 -pipe -fstack-protector-strong"		&&
export CXXFLAGS="${CFLAGS}"							&&
export LDFLAGS="-Wl,-rpath,${_pmappdir}"
evalretkill

# d1 >> extract tarball
aprint_ret "extracting ${1}."
tar xf $1
evalretkill

# d2 >> mv to /mss/work/UXP
aprint_ret "moving extracted files to ${srcdir}."
mv "${arname}" "${srcdir}"
evalretkill

# d3 >> cd to work
aprint_ret "changing active directory to ${srcdir}."
cd "${srcdir}"
evalretkill

# d4 >> copy mozconfig
aprint_ret "copying mozconfig."
cp "${repo}"/apathy-musl-mozconfig.config "${srcdir}"/mozconfig
evalretkill

# d5.1 >> apply apathy branding
aprint_ret "applying apathy-browser branding patch."
patch -p1 < "${repo}"/0001-apathy-browser-branding-28.7.2.patch > /tmp/apathy-browser-build.log 2>&1
evalretkill

# d5.2 >> change about-background.png
aprint_ret "changing about-background.png"
cp "${repo}"/files/about-background.png "${srcdir}"/application/palemoon/branding/unofficial/content
evalretkill

# d6 >> apply patch from bmlfs
aprint_ret "applying font rendering fix on x86 machines."
patch -Np0 < "${repo}"/0002-i686-fix.patch >> /tmp/apathy-browser-build.log 2>&1
evalretkill

# d7 >> run sed from arch
aprint_ret "running sed for locale fix."
sed -i 's#xlocale#locale#' "${srcdir}"/intl/icu/source/i18n/digitlst.cpp
evalretkill

# d8 >> print mach vars
aprint_nc
aprint_pvars "srcdir\t"			"${srcdir}"
aprint_pvars "pkgname\t"		"${pkgname}"
aprint_pvars "pkgver\t"			"${pkgver}"
aprint_pvars "_pmappdir\t"		"${_pmappdir}"
aprint_pvars "mozbuild_state_path"	"${MOZBUILD_STATE_PATH}"
aprint_pvars "mozconfig\t"		"${MOZCONFIG}"
aprint_pvars "cflags\t"			"${CFLAGS}"
aprint_pvars "cxxflags\t"		"${CXXFLAGS}"
aprint_pvars "ldflags\t"		"${LDFLAGS}"
aprint_nc

# d9 >> check everything and ask to run mach
aprint_ask "ready to run mach, shall we continue? (y/n): "

read answerbuild
 if [ "$answerbuild" != "${answerbuild#[Yy]}" ]
  then
   vi mozconfig
   aprint "running mach."
   aprint "tail -f /tmp/apathy-browser-build.log to view progress."
   python2.7 mach build >> /tmp/apathy-browser-build.log 2>&1
  else
   aprint "not running mach."
   exit 0
 fi

# d10 >> ask to install build
aprint_nc
aprint_ask "build complete, shall we run the installer? (y/n): "

read answerinst
 if [ "$answerinst" != "${answerinst#[Yy]}" ]
  then
   aprint "tail -f /tmp/apathy-browser-build.log to view progress."
   aprint_ret "installing to ${c_lcyan}${_instdir}${c_reset}."
   DESTDIR="${_instdir}" python2.7 mach install >> /tmp/apathy-browser-build.log
   evalret

   aprint_ret "removing unnecessary directories."
   rm -rf ${_instdir}/usr/include				&&
   rm -rf ${_instdir}/usr/lib/apathy-browser-devel-${pkgver}	&&
   rm -rf ${_instdir}/usr/share
   evalret
  else
   aprint "not installing."
   exit 0                            
 fi
