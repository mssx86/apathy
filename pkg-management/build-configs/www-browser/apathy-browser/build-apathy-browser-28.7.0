#!/bin/sh

. /mss/bin/apathy-funcs

# a1 >> check if a tarball is selected
if	[ -z $1 ];		then aprint_fail "no archive selected, exiting.";	exit 1
elif	[ ! -f "${PWD}/${1}" ];	then aprint_fail "tarball doesn't exist, exiting.";	exit 1
fi

# a2 >> check if $1 is a pale moon tarball
case $1 in
 *PM*)	aprint_nc "archive is a pale moon source tarball." ;;
 *)	aprint_fail "${1} is not a pale moon source tarball, exiting."; exit 1 ;;
esac

# c >> set build vars
aprint_ret "setting variables required before mach."
arname=$(echo UXP-$(echo $1 | sed 's/.tar.gz//'))				&&			
repo="/mss/repo/pkg-management/build-configs/www-browser/apathy-browser"	&&
srcdir=/mss/work/UXP
evalretkill

# d >> action
# d1 >> extract tarball
aprint_ret "extracting ${1}."
tar xf $1
evalretkill

# d2 >> mv to /mss/work/UXP
aprint_ret "renaming dirs."
mv "${arname}" "/mss/work/UXP"
evalretkill

# d3 >> cd to work
aprint_ret "changing active directory to ${srcdir}."
cd "${srcdir}"
evalretkill

# d3 >> apply apathy branding
aprint_ret "applying apathy-browser branding patch."
patch -p1 < "${repo}"/0001-apathy-browser-branding-27.0.0.patch > /tmp/apathy-browser-build.log 2>&1
evalretkill

# d4 >> copy mozconfig
aprint_ret "copying mozconfig."
cp "${repo}"/apathy-browser-mozconfig.config "${srcdir}"/mozconfig
evalretkill

# d5 >> run sed from arch
aprint_ret "running sed for locale fix."
sed -i 's#xlocale#locale#' "${srcdir}"/intl/icu/source/i18n/digitlst.cpp
evalretkill

# d6 >> set mach vars
aprint_ret "setting variables for mach."
export pkgname="apathy-browser (palemoon)"				&&
export pkgver=28.7.0							&&
export MOZBUILD_STATE_PATH="$srcdir/mozbuild"				&&
export MOZCONFIG="$srcdir/mozconfig"					&&
export CPPFLAGS="$CPPFLAGS -O2 -Wno-format-overflow"
evalretkill

# d6.1 >> print mach vars
aprint_nc
aprint "pkgname\t: ${c_lcyan}${pkgname}${c_reset}"
aprint "pkgver\t: ${c_lcyan}${pkgver}${c_reset}"
aprint "srcdir\t: ${c_lcyan}$srcdir${c_reset}"
aprint "mozbuild\t: ${c_lcyan}${MOZBUILD_STATE_PATH}${c_reset}"
aprint "mozconfig\t: ${c_lcyan}${MOZCONFIG}${c_reset}"
aprint "cppflags\t: ${c_lcyan}${CPPFLAGS}${c_reset}"
aprint_nc

# d7 >> check everything and ask to run mach
aprint_ask "ready to run mach, shall we continue? (y/n): "

read answerbuild
 if [ "$answerbuild" != "${answerbuild#[Yy]}" ]
  then
   vi mozconfig
   aprint "running mach."
   aprint "tail -f /tmp/apathy-browser-build.log to view progress."
   python2.7 mach build >> /tmp/apathy-browser-build.log 2>&1
  else
   aprint "not running mach."
   exit 0
 fi

# d8 >> ask to install build
aprint_nc
aprint_xn "build complete, shall we run the installer? (y/n): "

read answerinst
 if [ "$answerinst" != "${answerinst#[Yy]}" ]
  then
   aprint "installing."
   aprint "tail -f /tmp/apathy-browser-build.log to view progress."
   su -c "python2.7 mach install >> /tmp/apathy-browser-build.log"
   aprint "installation complete."
  else
   aprint "not installing."
   exit 0
 fi
