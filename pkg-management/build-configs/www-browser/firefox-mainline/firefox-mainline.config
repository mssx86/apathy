# 1 >> extraction
tar xf /mss/work/sauces/firefox-83.0.source.tar.xz
cd     firefox-83.0/

# 2 >> build vars
t61flags="-m64 -m80387 -mcx16 -mfancy-math-387 -mfxsr -mhard-float -mieee-fp -mlong-double-80 -mmmx"
t61flags="${t61flags} -mred-zone -msahf -msse -msse2 -msse3 -msse4.1 -mssse3 -mtls-direct-seg-refs "
t61flags="${t61flags} -march=core2 -mtune=core2"

unset \
 CC CXX LD AR AS NM STRIP RANLIB OBJCOPY OBJDUMP \
 OBJSIZE READELF ADDR2LINE CFLAGS CXXFLAGS LDFLAGS

export                     CC="clang"
export                    CXX="clang++"
export                     AR="llvm-ar"
export                     AS="clang"
export                     NM="llvm-nm"
export                 RANLIB="llvm-ranlib"

                       CFLAGS="-w -O2 ${t61flags} -fstack-protector-strong -flto=thin -flto-jobs=4 -L/usr/lib/apulse"
export                 CFLAGS="${CFLAGS} -fuse-ld=lld -stdlib=libc++ -rtlib=compiler-rt -unwindlib=libunwind"
export               CXXFLAGS="${CFLAGS}"
                      LDFLAGS="${CFLAGS} -Wl,-rpath=/usr/lib/firefox -Wl,-rpath=/usr/lib/apulse -Wl,--as-needed -Wl,--gc-sections -Wl,-O3"
export                LDFLAGS="${LDFLAGS} -Wl,-z,relro -Wl,-z,now -Wl,--lto-O3 -Wl,--icf=all -Wl,--thinlto-jobs=4"

                    RUSTFLAGS="-Cdebuginfo=0 -Ctarget-cpu=core2 -Clinker=$CC"
                    RUSTFLAGS="${RUSTFLAGS} -Ctarget-feature=+x87 -Ctarget-feature=+cx16 -Ctarget-feature=+fxsr -Ctarget-feature=+mmx"
                    RUSTFLAGS="${RUSTFLAGS} -Ctarget-feature=+sahf -Ctarget-feature=+sse -Ctarget-feature=+sse2 -Ctarget-feature=+sse3"
                    RUSTFLAGS="${RUSTFLAGS} -Ctarget-feature=+sse4.1 -Ctarget-feature=+ssse3 -Ctarget-feature=-avx -Ctarget-feature=-aes"
export              RUSTFLAGS="${RUSTFLAGS} -Ctarget-feature=-sse4a -Ctarget-feature=-sse4.2"

export            RUST_TARGET="x86_64-apathy-linux-musl"

export        PKG_CONFIG_PATH=/mss/pkgconfig:"$PKG_CONFIG_PATH"
export        LD_LIBRARY_PATH=/usr/lib/apulse:"$LD_LIBRARY_PATH"
export           LIBRARY_PATH=/usr/lib/apulse:"$LIBRARY_PATH"

export             MOZ_NOSPAM=1
export        MOZ_DEBUG_FLAGS="-g0"
export MACH_USE_SYSTEM_PYTHON=1

# 3 >> script vars
 repodir="/mss/repo/pkg-management/build-configs/www-browser/firefox-mainline"
filesdir="${repodir}/files"
    pdir="${repodir}/patches"

# 4 >> apply patches
for file in "${pdir}"/*.patch; do patch -p1 < "${file}"; done

# 5 >> nuke addons and pocket
sed '/doh-rollout/d;/screenshots/d;/webcompat/d;/report-site-issue/d' \
 -i browser/extensions/moz.build

# 6 >> add header from alpine
cp -vf "${filesdir}"/stab.h            toolkit/crashreporter/google-breakpad/src/

# 7 >> clear the default bookmarks
cp -vf "${filesdir}"/bookmarks.html.in browser/locales/generic/profile/bookmarks.html.in

# 8 >> clear sums
for sum in audio_thread_priority target-lexicon-0.9.0 proc-macro2 syn packed_simd; do
 sed -i 's/\("files":{\)[^}]*/\1/' third_party/rust/${sum}/.cargo-checksum.json
done

# 9 >> remove prebuilt binaries
find ./third_party -type f \( -name '*.so' -o -name '*.o' \) -print -delete

# 10 >> start the build
cp -v "${filesdir}"/mozconfig .
./mach build

# 11 >> install
instdir="$PWD/KEK"
DESTDIR="${instdir}" ./mach install

# 12 >> install prefs
install -v -Dm644 "${filesdir}"/vendor.js     \
 "${instdir}"/usr/lib/firefox/browser/defaults/preferences/vendor.js
install -v -Dm644 "${filesdir}"/policies.json \
 "${instdir}"/usr/lib/firefox/distribution/policies.json
