# 1 >> extraction
tar xf /mss/work/sauces/firefox-78.5.0esr.source.tar.xz
cd     firefox-78.5.0/

# 2 >> build vars
unset \
 CC CXX LD AR AS NM STRIP RANLIB OBJCOPY OBJDUMP \
 OBJSIZE READELF ADDR2LINE CFLAGS CXXFLAGS LDFLAGS

export                     CC="clang"
export                    CXX="clang++"
export                     AR="llvm-ar"
export                     AS="clang"
export                     NM="llvm-nm"
export                 RANLIB="llvm-ranlib"

                       CFLAGS="-w -O3 -mtune=native -march=native -fstack-protector-strong -flto=thin -flto-jobs=4 -L/usr/lib/apulse"
                       CFLAGS="${CFLAGS} -fno-semantic-interposition -ftree-vectorize -fno-math-errno -fno-trapping-math"
export                 CFLAGS="${CFLAGS} -fuse-ld=lld -stdlib=libc++ -rtlib=compiler-rt -unwindlib=libunwind"
export               CXXFLAGS="${CFLAGS}"
                      LDFLAGS="${CFLAGS} -Wl,-rpath=/usr/lib/firefox -Wl,-rpath=/usr/lib/apulse -Wl,--as-needed -Wl,--gc-sections -Wl,-O3"
export                LDFLAGS="${LDFLAGS} -Wl,-z,relro -Wl,-z,now -Wl,--lto-O3 -Wl,--icf=all -Wl,--thinlto-jobs=4"

export              RUSTFLAGS="-Cdebuginfo=0 -Ctarget-cpu=native -Clinker=clang"
export            RUST_TARGET="x86_64-apathy-linux-musl"

export        PKG_CONFIG_PATH=/mss/pkgconfig:"$PKG_CONFIG_PATH"
export        LD_LIBRARY_PATH=/usr/lib/apulse:"$LD_LIBRARY_PATH"
export           LIBRARY_PATH=/usr/lib/apulse:"$LIBRARY_PATH"

export             MOZ_NOSPAM=1
export        MOZ_DEBUG_FLAGS="-g0"
export MACH_USE_SYSTEM_PYTHON=1

# 3 >> script vars
 repodir="/mss/repo/pkg-management/build-configs/www-browser/firefox-esr"
filesdir="${repodir}/files"
    pdir="${repodir}/patches"

# 4 >> apply patches
# 4 >> apply patches
patch -p1 < "${pdir}"/0001-G-fortify-sources-properly.patch
patch -p1 < "${pdir}"/0002-G-system-harfbuzz.patch
patch -p1 < "${pdir}"/0003-G-fix-building-sandbox.patch
patch -p1 < "${pdir}"/0004-G-fix-building-spellchecker-when-using-gcc-and-pgo.patch
patch -p1 < "${pdir}"/0005-G-support-custom-vendor-strings.patch
patch -p1 < "${pdir}"/0006-G-add-alternate-name-for-private-siginfo-struct-member.patch
patch -p1 < "${pdir}"/0007-G-fix-syscall-wrappers.patch
patch -p1 < "${pdir}"/0008-G-only-use-system-heap-reporter-with-glibc.patch
patch -p1 < "${pdir}"/0009-G-set-pthread-name-for-non-glibc-systems.patch
patch -p1 < "${pdir}"/0010-G-getcontext-is-only-avaliable-on-glibc-systems.patch
patch -p1 < "${pdir}"/0011-G-auvx.h-avaliable-on-more-then-just-glibc-sytems.patch
patch -p1 < "${pdir}"/0012-G-make-sys_fork-non-fatal.patch
patch -p1 < "${pdir}"/0013-G-make-pgo-use-toolchain.patch
patch -p1 < "${pdir}"/0014-G-disable-watchdog-during-pgo-builds.patch
patch -p1 < "${pdir}"/0015-G-force-one-lto-partition-for-sandbox-when.patch
patch -p1 < "${pdir}"/0016-G-set-gdk_focus_change_mask.patch
patch -p1 < "${pdir}"/0017-G-vaapi-add-extra-frames.patch
patch -p1 < "${pdir}"/0018-G-fix-building-with-pgo-when-using-gcc.patch
patch -p1 < "${pdir}"/0019-G-geckodriver-build-regex-with-unicode-feature.patch
patch -p1 < "${pdir}"/0020-G-make-elfhack-use-toolchain.patch
patch -p1 < "${pdir}"/0021-G-make-dbus-optional.patch
patch -p1 < "${pdir}"/0022-G-allow-build-with-rustc-1.47.0-p1.patch
patch -p1 < "${pdir}"/0023-G-allow-build-with-rustc-1.47.0-p2.patch
patch -p1 < "${pdir}"/0024-G-allow-build-with-rustc-1.48.0.patch
patch -p1 < "${pdir}"/0025-A-disable-moz-stackwalk.patch
patch -p1 < "${pdir}"/0026-A-fix-rust-target.patch
patch -p1 < "${pdir}"/0027-A-remove-faulty-libvpx-check.patch
patch -p1 < "${pdir}"/0028-A-sandbox-sched_setscheduler.patch
patch -p1 < "${pdir}"/0029-M-remove-unwanted-extensions.patch
patch -p1 < "${pdir}"/0030-M-remove-pocket.patch
patch -p1 < "${pdir}"/0031-M-disable-discoverystream.patch
patch -p1 < "${pdir}"/0032-K-gtk2-removal.patch

# 5 >> nuke addons and pocket
rm -rfv \
 browser/extensions/webcompat         \
 browser/extensions/doh-rollout       \ 
 browser/extensions/screenshots       \
 browser/extensions/report-site-issue \
 browser/components/pocket

# 6 >> add header from alpine
cp -vf "${filesdir}"/stab.h            toolkit/crashreporter/google-breakpad/src/

# 7 >> clear the default bookmarks
cp -vf "${filesdir}"/bookmarks.html.in browser/locales/generic/profile/bookmarks.html.in

# 8 >> clear sums
for sum in audio_thread_priority target-lexicon-0.9.0 proc-macro2 syn packed_simd; do
 sed -i 's/\("files":{\)[^}]*/\1/' third_party/rust/${sum}/.cargo-checksum.json
done

# 9 >> remove prebuilt binaries
find ./third_party -type f \( -name '*.so' -o -name '*.o' \) -print -delete

# 10 >> start the build
cp -v "${filesdir}"/mozconfig .
./mach build

# 11 >> install
instdir="$PWD/KEK"
DESTDIR="${instdir}" ./mach install

# 12 >> install prefs
install -v -Dm644 "${filesdir}"/vendor.js     \
 "${instdir}"/usr/lib/firefox/browser/defaults/preferences/vendor.js
install -v -Dm644 "${filesdir}"/policies.json \
 "${instdir}"/usr/lib/firefox/distribution/policies.json
