# 1 > boost
cdt1
pushd /opt
doas -- tar xfvp \
 /mnt/mss/stuff/techy-bits/packaged-software/t61-boost-1.72.0-gcc-9.3.0.tar.zst
find boost-1.72.0 -type f -name \*.so\* -exec doas -- rm -rfv {} ';'
popd

export   CFLAGS="$CFLAGS   -I/opt/boost-1.72.0/include -L/opt/boost-1.72.0/lib"
export  LDFLAGS="$LDFLAGS  -I/opt/boost-1.72.0/include -L/opt/boost-1.72.0/lib"
export CXXFLAGS="$CXXFLAGS -I/opt/boost-1.72.0/include -L/opt/boost-1.72.0/lib"

# 2 > libsndfile
tar xf /mss/work/sauces/libsndfile-1.0.29.tar.bz2
cd     libsndfile-1.0.29/

ac_cv_sys_largefile_CFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64" \
./configure \
 --build=$CBUILD              \
 --host=$CHOST                \
 --prefix=/mss/work/table/usr \
 --disable-sqlite             \
 --disable-shared             \
 --enable-static              \
 --enable-largefile

make
make install

cd ..
rm -rf libsndfile-1.0.29/

export            PATH="$PATH:/mss/work/table/usr/bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/mss/work/table/usr/lib/"
export    LIBRARY_PATH="$LD_LIBRARY_PATH"
export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:/mss/work/table/usr/lib/pkgconfig"

# 3 > protobuf
tar xf /mss/work/sauces/protobuf-3.13.0.tar.gz
cd     protobuf-3.13.0/

./autogen.sh

CXXFLAGS="$CXXFLAGS -fno-delete-null-pointer-checks -Wno-error" \
./configure \
 --prefix=/mss/work/table/usr             \
 --sysconfdir=/mss/work/table/etc         \
 --mandir=/mss/work/table/usr/share/man   \
 --infodir=/mss/work/table/usr/share/info \
 --localstatedir=/mss/work/table/var      \
 --disable-shared                         \
 --enable-static

make
make install

cd ..
rm -rf protobuf-3.13.0/

# 4 > qt5-base
tar xf /mss/work/sauces/qtbase-everywhere-src-5.15.1.tar.xz
mv qtbase-everywhere-src-5.15.1/ qtbase/

pdir="/mss/repo/pkg-management/patches/qt-5.15.1"
patch -p0 < "$pdir"/0001-addlr.patch
patch -p0 < "$pdir"/0002-gl-lib-dir.patch
patch -p0 < "$pdir"/0007-musl-iconv-no-bom.patch
patch -p0 < "$pdir"/0050-qmake-mkspecs.patch
patch -p0 < "$pdir"/0060-upstream-65243ad7.patch
patch -p0 < "$pdir"/qtnetwork-5.15.0-libressl.patch

cd qtbase

export CFLAGS="${CFLAGS} -DOPENSSL_NO_PSK -DOPENSSL_NO_NEXTPROTONEG"
export CXXFLAGS="${CXXFLAGS} -DOPENSSL_NO_PSK -DOPENSSL_NO_NEXTPROTONEG -Wno-deprecated-declarations -Wno-class-memaccess -Wno-packed-not-aligned"
export LDFLAGS="${LDFLAGS} -DOPENSSL_NO_PSK -DOPENSSL_NO_NEXTPROTONEG -pthread -ldl -fPIE -Wl,-z,stack-size=2097152"

./configure \
 -silent                               \
 -prefix "/mss/work/table/usr"         \
 -sysconfdir "/mss/work/table/etc/xdg" \
\
 -confirm-license                      \
 -opensource                           \
\
 -nomake examples                      \
 -system-harfbuzz                      \
 -system-libjpeg                       \
 -system-libpng                        \
 -system-pcre                          \
 -system-sqlite                        \
 -system-zlib                          \
 -reduce-relocations                   \
 -no-shared                            \
 -static                               \
 -openssl-linked                       \
 -no-rpath                             \
 -no-mimetype-database

make -j7
make install

cd ..
rm -rf qtbase

# 5 > qt5-svg
tar xf /mss/work/sauces/qtsvg-everywhere-src-5.15.1.tar.xz
cd     qtsvg-everywhere-src-5.15.1/

qmake CONFIG+=static
make -j7
make install

cd ..
rm -rf qtsvg-everywhere-src-5.15.1/


# 6 > qt5-tools
tar xf /mss/work/sauces/qttools-everywhere-src-5.15.1.tar.xz
cd     qttools-everywhere-src-5.15.1/

qmake
make -j7
make install

cd ..
rm -rf qttools-everywhere-src-5.15.1

# 7 > mumbe
tar xf /mss/work/sauces/mumble-1.3.3.tar.gz
cd     mumble-1.3.3

# edit qmake/compiler.pri, god help you.

qmake main.pro \
 CONFIG+=no-bundled-opus \
 CONFIG+=no-optimize     \
 CONFIG+=no-dbus         \
 CONFIG+=no-g15          \
 CONFIG+=no-jackaudio    \
 CONFIG+=no-asio         \
 CONFIG+=no-directsound  \
 CONFIG+=no-wasapi       \
 CONFIG+=no-pulseaudio   \
 CONFIG+=no-oss          \
 CONFIG+=no-speechd      \
 CONFIG+=no-update       \
 CONFIG+=no-bonjour      \
 CONFIG+=no-overlay      \
 CONFIG+=no-xinput2      \
 CONFIG+=no-gkey         \
 CONFIG+=no-xboxinput    \
 CONFIG+=no-ice          \
 CONFIG+=g15-emulator    \
 CONFIG+=no-embed-qt-translations

# grep for -static in makefiles and nuke it off.

make -j7

instdir="${PWD}/KEK"

install -vDm 755 release/mumble         -t "${instdir}/usr/bin"
install -vDm 755 scripts/mumble-overlay -t "${instdir}/usr/bin/"

install -vdm 755                           "${instdir}/usr/lib/mumble/"
for meme in release/*.so*; do
 if [ -L "$meme" ]
  then cp -vP "$meme"                      "${instdir}/usr/lib/mumble/"
  else install -vDm 755 "$meme"         -t "${instdir}/usr/lib/mumble/"
 fi
done
install -vDm 755 release/plugins/*.so   -t "${instdir}/usr/lib/mumble/"

install -vDm 644 "man/mumble"*.1        -t "${instdir}/usr/share/man/man1/"
install -vDm 755 release/murmurd        -t "${instdir}"/usr/bin
install -vDm 640 scripts/murmur.ini     -t "${instdir}"/etc
install -vDm 644 man/murmur*.1          -t "${instdir}/usr/share/man/man1/"

cd ${instdir}/usr/bin
strip --strip-all -v *

cd ../lib/mumble
find . -type f -name \*.so\* -exec strip --strip-unneeded -v {} ';'
