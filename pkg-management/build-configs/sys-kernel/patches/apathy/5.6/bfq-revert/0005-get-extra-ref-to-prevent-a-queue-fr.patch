From 55d55e0c63e2fa125fd538f2ad7563f7125b782d Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Fri, 7 Feb 2020 00:32:03 +0100
Subject: [PATCH 5/8] Revert "block, bfq: get extra ref to prevent a queue from
 being freed during a group move"

This reverts commit d774e9deb7227260b1de7d2a8f0c15370f309989.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/bfq-cgroup.c | 8 --------
 1 file changed, 8 deletions(-)

diff --git a/block/bfq-cgroup.c b/block/bfq-cgroup.c
index bed77b5e40b8..1aef1af08137 100644
--- a/block/bfq-cgroup.c
+++ b/block/bfq-cgroup.c
@@ -652,12 +652,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 		bfq_bfqq_expire(bfqd, bfqd->in_service_queue,
 				false, BFQQE_PREEMPTED);
 
-	/*
-	 * get extra reference to prevent bfqq from being freed in
-	 * next possible deactivate
-	 */
-	bfqq->ref++;
-
 	if (bfq_bfqq_busy(bfqq))
 		bfq_deactivate_bfqq(bfqd, bfqq, false, false);
 	else if (entity->on_st)
@@ -677,8 +671,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 
 	if (!bfqd->in_service_queue && !bfqd->rq_in_driver)
 		bfq_schedule_dispatch(bfqd);
-	/* release extra ref taken above */
-	bfq_put_queue(bfqq);
 }
 
 /**
-- 
2.25.1.460.g2f268890c2.dirty

