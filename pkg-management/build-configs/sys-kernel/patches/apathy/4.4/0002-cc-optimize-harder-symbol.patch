diff -uraN a/Makefile b/Makefile
--- a/Makefile	2019-12-29 21:07:21.918941356 +0300
+++ b/Makefile	2019-12-29 21:06:51.989940872 +0300
@@ -642,12 +642,16 @@
 ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS	+= -Os
 else
+ifdef CONFIG_CC_OPTIMIZE_HARDER
+KBUILD_CFLAGS	+= -O3
+else
 ifdef CONFIG_PROFILE_ALL_BRANCHES
 KBUILD_CFLAGS	+= -O2
 else
 KBUILD_CFLAGS   += -O2
 endif
 endif
+endif
 
 # Tell gcc to never replace conditional load with a non-conditional one
 KBUILD_CFLAGS	+= $(call cc-option,--param=allow-store-data-races=0)
diff -uraN a/init/Kconfig b/init/Kconfig
--- a/init/Kconfig	2019-12-21 12:35:48.000000000 +0300
+++ b/init/Kconfig	2019-12-29 21:06:15.842940287 +0300
@@ -1329,6 +1329,13 @@
 	  with the "-O2" compiler flag for best performance and most
 	  helpful compile-time warnings.
 
+config CC_OPTIMIZE_HARDER
+	bool "Optimize harder"
+	help
+	  This option will pass "-O3" to your compiler resulting in a
+	  larger and faster kernel. The more complex optimizations also
+	  increase compilation time and may affect stability.
+
 config CC_OPTIMIZE_FOR_SIZE
 	bool "Optimize for size"
 	help
