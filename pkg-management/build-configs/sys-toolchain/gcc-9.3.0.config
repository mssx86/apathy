#!/mss/bin/sh
# apathy-musl 1.2 - mss@waifu.club
# build script for gcc stable releases and snapshots, version 3.

. /mss/bin/apathy-funcs

# a >> check if at least something is specified as dolla sihn one.
[ -z $1 ] && aprint_fail "no gcc version specified as \$1, exiting." && exit 1

# b1 >> set script vars
         logdir="/mss/work/logs"
       saucedir="/mss/work/sauces"
        repodir="/mss/repo"
           pdir="${repodir}/pkg-management/patches/gcc-9.3.0"

         _build="x86_64-apathy-linux-musl"
           _url="https://github.com/mssx86/apathy"

        tarball="${1}"
        _gccver="$(echo ${1} | sed 's/.tar.[xg]z//')"

            rdr="${logdir}"/$(date "+%Y%m%d_%H%M%S")-"${_gccver}".log

export   CFLAGS="-march=native -mtune=native -w"
export CXXFLAGS="${CFLAGS}"

# b2 >> print versions
aprint_nc
lsdetail "gcc version" "${_gccver}"
lsdetail "build      " "${_build}"
aprint_nc
lsdetail "cc         "  "${CC}"
lsdetail "cxx        "  "${CXX}"
lsdetail "cflags     "  "${CFLAGS}"
lsdetail "cxxflags   "  "${CXXFLAGS}"
aprint_nc

# c1 >> extract gcc sauce
if [ -f "${saucedir}/${tarball}" ]
 then
  aprint_ret "extracting the ${cl_grn}gcc source${c_res} to current directory."
   tar xf "${saucedir}/${tarball}" > ${rdr} 2>&1
  evalretkill
  
  cd ${_gccver}
 else
  aprint_fail "gcc tarball does not exist in saucedir, exiting."; exit 1
fi

# c2 >> extract isl sauce
if [ -f "${saucedir}/isl-0.21.tar.xz" ]
 then
  aprint_ret "extracting the ${cl_grn}isl source${c_res} to current directory."
   tar xf "${saucedir}/isl-0.21.tar.xz" >> ${rdr} 2>&1
  evalretkill
  aprint_ret "moving the ${cl_grn}isl source${c_res} to ${cb_blu}isl/${c_res}."
   mv isl-0.21 isl
  evalretkill
 else
  aprint_fail "gcc tarball does not exist in saucedir, exiting."; exit 1
fi


# d1 >> _FORTIFY_SOURCE needs an optimization level.
aprint_nc
aprint_ret "${cl_grn}_FORTIFY_SOURCE${c_res} needs an optimization level."
 sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/"        gcc/configure
 sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/"  libiberty/configure
evalretkill

# d2 >> change the default libdir to /lib from /lib64.
aprint_ret "running sed to change the default libdir to ${cl_grn}/lib${c_res}."
 sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
 sed -i 's/lib64/lib/'       gcc/config/i386/linux64.h
evalretkill

# d3 >> apply patches from void
aprint_nc
aprint "applying patches from void/alpine."
 peezero="0001-fix-cxxflags-passing.patch
          0002-fix-musl-execinfo.patch
          0003-invalid_tls_model.patch
          0004-libffi_gnulinux.patch"

  peeone="0005-libssp-musl.patch"

for pp in $peezero; do
 aprint_ret "${cb_blu}${pp}${c_res}"
  patch -p0 < "${pdir}/${pp}" >> "${rdr}" 2>&1
 evalretkill
done

for pp in $peeone; do
 aprint_ret "${cb_blu}${pp}${c_res}"
  patch -p1 < "${pdir}/${pp}" >> "${rdr}" 2>&1
 evalretkill
done

# e >> create build dir
aprint_nc
aprint_ret "creating the ${cl_grn}build${c_res} directory."
 mkdir -v build >> ${rdr} 2>&1
 cd build
evalretkill

# f >> run the configure 
aprint_ret "running the ${cl_grn}configure${c_res} script."
_configure(){
libat_cv_have_ifunc=no           \
../configure                     \
\
 --prefix=/usr                   \
 --libdir=/usr/lib               \
 --mandir=/usr/share/man         \
 --infodir=/usr/share/info       \
\
 --build="${_build}"             \
 --with-bugurl="${_url}"         \
 --with-pkgversion="apathy"      \
\
 --enable-checking="release"     \
 --enable-languages="c,c++"      \
\
 --with-isl                      \
 --with-linker-hash-style="gnu"  \
 --with-system-zlib              \
 --enable-__cxa_atexit           \
 --enable-default-pie            \
 --enable-default-ssp            \
 --enable-fast-character         \
 --enable-linker-build-id        \
 --enable-lto                    \
 --enable-plugins                \
 --enable-serial-configure       \
 --enable-shared                 \
 --enable-threads="posix"        \
 --enable-tls                    \
 --enable-vtable-verify          \
\
 --without-included-gettext      \
 --disable-fixed-point           \
 --disable-libmpx                \
 --disable-libmudflap            \
 --disable-libsanitizer          \
 --disable-libstdcxx-pch         \
 --disable-libunwind-exceptions  \
 --disable-multilib              \
 --disable-nls                   \
 --disable-symvers               \
 --disable-target-libiberty      \
 --disable-werror                \
\
 >> "$rdr" 2>&1
}
_configure
evalretkill

# g >> run make
aprint_nc
aprint_ask "run make? (y/n): "
read answerbuildgcc

case "$answerbuildgcc" in
 y|Y|yes)
  aprint "current date is ${cl_grn}$(date '+%a %d %I:%M:%S%P')${c_res}."
  aprint "redirecting output to ${cl_grn}${rdr}${c_res}."
  aprint_ret "running make."
  datebefore=$(date +%s)

  /bin/busybox time make -j2 >> ${rdr} 2>&1
  evalretkill

  dateafter=$(date +%s)
  timespent=$(($dateafter - $datebefore))
  humantime=$(printf "%dd %dh %dm\n"                    \
            "$(echo "${timespent}/86400"        | bc)"  \
            "$(echo "(${timespent}%86400)/3600" | bc)"  \
            "$(echo "(${timespent}%3600)/60"    | bc)")

  aprint_nc
  aprint "build finished in ${cl_grn}${humantime}${c_res}."
 ;;
 *)
  aprint "not running make."
  aprint_nc
  exit 0
 ;;
esac
