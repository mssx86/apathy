# 1
t61cf="-m80387 -mcx16 -mfancy-math-387 -mfxsr -mhard-float -mieee-fp -mlong-double-80"
t61cf="${t61cf} -mmmx -mred-zone -msahf -msse -msse2 -msse3 -msse4.1 -mssse3"
t61cf="${t61cf} -mtls-direct-seg-refs -march=core2 -mtune=core2"

export        CC="/opt/llvm-11.0.1/bin/clang"
export       CXX="/opt/llvm-11.0.1/bin/clang++"
export        LD="/opt/llvm-11.0.1/bin/ld.lld"
export        AR="/opt/llvm-11.0.1/bin/llvm-ar"
export        AS="/opt/llvm-11.0.1/bin/llvm-as"
export        NM="/opt/llvm-11.0.1/bin/llvm-nm"
export     STRIP="/opt/llvm-11.0.1/bin/llvm-strip"
export    RANLIB="/opt/llvm-11.0.1/bin/llvm-ranlib"
export   OBJCOPY="/opt/llvm-11.0.1/bin/llvm-objcopy"
export   OBJDUMP="/opt/llvm-11.0.1/bin/llvm-objdump"
export   OBJSIZE="/opt/llvm-11.0.1/bin/llvm-size"
export   READELF="/opt/llvm-11.0.1/bin/llvm-readelf"
export ADDR2LINE="/opt/llvm-11.0.1/bin/llvm-addr2line"

          CFLAGS="-w -pipe -O2 ${t61cf}"
export    CFLAGS="${CFLAGS} -fuse-ld=lld -stdlib=libc++ -rtlib=compiler-rt -unwindlib=libunwind"
export  CXXFLAGS="${CFLAGS} -fpermissive"
export   LDFLAGS="${CFLAGS} -Wl,--as-needed,--sort-common,-z,relro,-z,now,--gc-sections,-O2,--icf=all,-z,stack-size=2097152"

# 2
tar xf /mss/work/sauces/llvmorg-11.1.0.tar.gz
cd     llvm-project-llvmorg-11.1.0/

sed -i 's/!defined(_GCC_MAX_ALIGN_T)/& \&\& !defined(__DEFINED_max_align_t)/'                      libcxx/include/stddef.h
sed -i 's/set(COMPILER_RT_HAS_SANITIZER_COMMON TRUE)/set(COMPILER_RT_HAS_SANITIZER_COMMON FALSE)/' compiler-rt/cmake/config-ix.cmake

pdir="/mss/repo/pkg-management/patches/llvm-11.1.0"
patch -p1 < "${pdir}"/libcxx-musl_compat.patch

# 3
mkdir -v build
cd       build

# 4
myproj="libunwind;libcxxabi;libcxx;compiler-rt;llvm;lld;clang"

cmake -Wno-dev -GNinja \
 -DLLVM_ENABLE_PROJECTS="${myproj}"                   \
\
 -DCMAKE_INSTALL_PREFIX="/opt/llvm-11.1.0"            \
 -DCMAKE_BUILD_TYPE=Release                           \
 -DCMAKE_C_FLAGS_RELEASE_INIT="$CFLAGS"               \
 -DCMAKE_CXX_FLAGS_RELEASE_INIT="$CXXFLAGS"           \
 -DCMAKE_EXE_LINKER_FLAGS_RELEASE_INIT="$LDFLAGS"     \
\
 -DLLVM_HOST_TRIPLE="$CHOST"                          \
 -DLLVM_TARGETS_TO_BUILD="host"                       \
 -DLLVM_DEFAULT_TARGET_TRIPLE="$CHOST"                \
 -DCMAKE_C_COMPILER_TARGET="$CHOST"                   \
 -DCMAKE_CXX_COMPILER_TARGET="$CHOST"                 \
\
 -DCMAKE_AR="$AR"                                     \
 -DCMAKE_NM="$NM"                                     \
 -DCMAKE_STRIP="$STRIP"                               \
 -DCMAKE_RANLIB="$RANLIB"                             \
 -DCMAKE_LINKER="$LD"                                 \
 -DCMAKE_OBJCOPY="$OBJCOPY"                           \
 -DCMAKE_OBJDUMP="$OBJDUMP"                           \
 -DCMAKE_READELF="$READELF"                           \
 -DCMAKE_ADDR2LINE="$ADDR2LINE"                       \
 -DCMAKE_C_COMPILER="$CC"                             \
 -DCMAKE_CXX_COMPILER="$CXX"                          \
\
 -DLLVM_ENABLE_EH=ON                                  \
 -DLLVM_ENABLE_FFI=ON                                 \
 -DLLVM_ENABLE_PIC=ON                                 \
 -DLLVM_ENABLE_RTTI=ON                                \
 -DLLVM_ENABLE_ZLIB=ON                                \
 -DLLVM_ENABLE_LIBXML2=OFF                            \
 -DLLVM_ENABLE_LIBEDIT=OFF                            \
 -DLLVM_ENABLE_TERMINFO=OFF                           \
 -DLLVM_LINK_LLVM_DYLIB=ON                            \
 -DLLVM_BUILD_LLVM_DYLIB=ON                           \
 -DLLVM_OPTIMIZED_TABLEGEN=ON                         \
\
 -DLLVM_APPEND_VC_REV=ON                              \
 -DLLVM_ENABLE_LIBCXX=ON                              \
 -DLLVM_ENABLE_LLD=ON                                 \
 -DLLVM_ENABLE_LTO=OFF                                \
\
 -DCLANG_VENDOR="apathy"                              \
 -DCLANG_VENDOR_UTI="org.apathy"                      \
 -DCLANG_LINK_CLANG_DYLIB=ON                          \
 -DCLANG_ENABLE_ARCMT=OFF                             \
 -DCLANG_ENABLE_STATIC_ANALYZER=OFF                   \
 -DCLANG_DEFAULT_CXX_STDLIB="libc++"                  \
 -DCLANG_DEFAULT_LINKER="lld"                         \
 -DCLANG_DEFAULT_RTLIB="compiler-rt"                  \
 -DCLANG_DEFAULT_UNWINDLIB="libunwind"                \
\
 -DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON                 \
 -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON                \
 -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=OFF             \
\
 -DLIBCXXABI_USE_COMPILER_RT=ON                       \
 -DLIBCXXABI_USE_LLVM_UNWINDER=ON                     \
 -DLIBCXXABI_ENABLE_ASSERTIONS=ON                     \
 -DLIBCXX_HAS_MUSL_LIBC=ON                            \
 -DLIBCXX_USE_COMPILER_RT=ON                          \
 -DLIBCXX_CXX_ABI="libcxxabi"                         \
 -DLIBCXX_ENABLE_FILESYSTEM=ON                        \
 -DLIBUNWIND_USE_COMPILER_RT=ON                       \
\
 -DCLANG_INCLUDE_DOCS=OFF                             \
 -DCLANG_INCLUDE_TESTS=OFF                            \
 -DCOMPILER_RT_INCLUDE_TESTS=OFF                      \
 -DLLVM_BUILD_DOCS=OFF                                \
 -DLLVM_BUILD_TESTS=OFF                               \
 -DLLVM_BUILD_EXAMPLES=OFF                            \
 -DLLVM_ENABLE_SPHINX=OFF                             \
 -DLLVM_ENABLE_DOXYGEN=OFF                            \
 -DLLVM_INCLUDE_DOCS=OFF                              \
 -DLLVM_INCLUDE_TESTS=OFF                             \
 -DLLVM_INCLUDE_EXAMPLES=OFF                          \
 -DLLVM_INCLUDE_GO_TESTS=OFF                          \
 -DLLVM_INCLUDE_BENCHMARKS=OFF                        \
 -DLLVM_TOOL_LLVM_GO_BUILD=OFF                        \
 -DLLVM_TOOL_LLVM_OPT_FUZZER_BUILD=OFF                \
 -DLLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD=OFF        \
 -DLLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD=OFF     \
 -DLLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD=OFF   \
 -DLLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD=OFF \
\
 ../llvm

# 5
/bin/busybox time samu -j5

# 6
instdir="$PWD/KEK"
DESTDIR="${instdir}" samu install

rm -rfv \
 "${instdir}"/opt/llvm-11.1.0/share/man \
 "${instdir}"/opt/llvm-11.1.0/share/clang/bash-autocomplete.sh

find "${instdir}"/opt/llvm-11.1.0/bin \
 -type f              -exec strip --strip-all      -v {} ';'

find "${instdir}"/opt/llvm-11.1.0/lib \
 -type f -name \*.a   -exec strip --strip-debug    -v {} ';'

find "${instdir}"/opt/llvm-11.1.0/lib \
 -type f -name \*.so* -exec strip --strip-unneeded -v {} ';'
